#!/bin/bash

function my_ps()
{ ps "$@" -u "${USER}" -o pid,%cpu,%mem,bsdtime,command ; }

function ask()
{
    echo -n "$@" '[y/n] ' ; read -r ans
    case "$ans" in
        y*|Y*) return 0 ;;
        *) return 1 ;;
    esac
}


# This function is roughly the same as 'killall' on linux
# but has no equivalent (that I know of) on Solaris

function killps()   # kill by process name
{
    local pid pname sig="-TERM"   # default signal
    if [ "$#" -lt 1 ] || [ "$#" -gt 2 ]; then
        echo "Usage: killps [-SIGNAL] pattern"
        return;
    fi
    if [ $# = 2 ]; then sig=$1 ; fi
    for pid in $(my_ps| awk '!/awk/ && $0~pat { print $1 }' pat=${!#} ) ; do
        pname=$(my_ps | awk '$1~var { print $5 }' var="$pid" )
        if ask "Kill process $pid <$pname> with signal $sig?"
        then kill "$sig" "$pid"
        fi
    done
}

killps "$@"
